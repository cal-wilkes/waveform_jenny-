library ieee;
use ieee.std_logic_1164.all;
use iee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity triangle is
	port( clk : in std_logic;  -- to change the frequncy you need to adjust this clock, not fully sure how yet but im guessing we'd have to pass that value into this
			reset : in std_logic;
			pwm : out std_logic_vector(7 downto 0));
end triangle;

architecture Behavioral of triangle is

signal count1, count2 : integer := 0;
signal direction : std_logic := '0';

begin

process(clk,reset)
begin
	if(reset = '1') then
		count1 <= 0;
		count2 <= 129;
		pwm <= 0;
	elsif(rising_edge(clk)) then	-- the amplitude should be controlled by the value of counter which has 255 as the max value for 8 bits
		if(count1 = 253) then
			count1 <= 0;
				if(direction = '0') then
					direction <= '1';
					count2 <= 126;
				else
					direction <= '0';
					count2 <= 129;
				end if;
			else 
				count1 <= count1 + 1;
			end if;
			if(direction = '0') then
				if(count2 = 255) then
					count2 <= 0;
				else
					count2 <= count2 + 1;
				end if;
			else
				if(count2 = 255) then
					count2 <= 0;
				else
					count2 <= count2 - 1;
				end if;
			end if;
		end if;
end process;

pwm <= conv_std_logic_vector(count2,8);

end Behavioral;